--
--  Copyright (c) 2018, German Rivera
--  All rights reserved.
--
--  Redistribution and use in source and binary forms, with or without
--  modification, are permitted provided that the following conditions are met:
--
--  * Redistributions of source code must retain the above copyright notice,
--    this list of conditions and the following disclaimer.
--
--  * Redistributions in binary form must reproduce the above copyright notice,
--    this list of conditions and the following disclaimer in the documentation
--    and/or other materials provided with the distribution.
--
--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
--  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
--  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
--  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
--  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
--  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
--  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
--  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
--  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
--  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
--  POSSIBILITY OF SUCH DAMAGE.
--

with Microcontroller.Clocks;
with Microcontroller.Arch_Specific;
with Memory_Utils;
with Low_Level_Debug;

package body Startup is

   ----------------
   -- Enable_FPU --
   ----------------

   procedure Enable_FPU is
   begin
      null;
      --li t0, MSTATUS_FS
      --csrs mstatus, t0
      --csrr t1, mstatus
      --and t1, t1, t0
      --beqz t1, 1f
      --fssr zero
      --1:

   end Enable_FPU;

   -------------------
   -- Reset_Handler --
   -------------------

   procedure Reset_Handler is
      procedure Gnat_Generated_Main with Import,
				      Convention => C,
				      External_Name => "main";
   begin
      Microcontroller.Arch_Specific.Disable_Cpu_Interrupts;

      --
      --  In case C code is invoked from Ada, C global variables
      --  need to be initialized in RAM:
      --
      Memory_Utils.Copy_Data_Section;
      Memory_Utils.Clear_BSS_Section;

      Low_Level_Debug.Initialize_Rgb_Led;
      Microcontroller.Clocks.Initialize;

      Low_Level_Debug.Initialize_Uart;
      Enable_FPU;
      Microcontroller.Arch_Specific.Interrupt_Handling_Init;
      --Microcontroller.Arch_Specific.Enable_Cpu_Interrupts;

      --
      --  Call main() generated by gnat binder, which will do the elaboration
      --  of Ada library-level packages and then invoke the main Ada subprogram
      --
      --  NOTE: Before calling 'Gnat_Generated_Main' only
      --  "No_Elaboration_Code_All" packages can be invoked.
      --
      Gnat_Generated_Main;

      --
      --  We should not return here
      --
      loop
	 null;
      end loop;
   end Reset_Handler;

end Startup;
